import{aP as t,d as g,r as l,q as i,o as h,c as v,h as f,$ as S,a7 as _,aa as y}from"./index--PhRNylI.js";function b(e){return t({url:"/scene-config/page/list",method:"get",params:e})}function N(e){return t({url:"/scene-config/list",method:"get",params:e})}function B(e){return t({url:"/scene-config",method:"post",data:e})}function L(e){return t({url:"/scene-config",method:"put",data:e})}function $(e,s){return t({url:`/scene-config/${e}/status/${s}`,method:"put"})}function k(e){return t({url:"/scene-config/ids",method:"delete",data:[e]})}function q(e){return t({url:"/scene-config/ids",method:"delete",data:e})}const w=g({name:"SelectScene",__name:"select-scene",props:{groupName:{},clearable:{type:Boolean,default:!1}},emits:["update:value"],setup(e,{emit:s}){const p=s,n=e,o=l([]),a=l("");async function m(u){if(n.groupName){const c=await N({groupName:u});o.value=c.data.map(r=>r.sceneName)}else a.value="",o.value=[]}return i(()=>n.groupName,()=>{m(n.groupName)}),i(()=>a.value,()=>{p("update:value",a.value)}),(u,c)=>{const r=y;return h(),v(r,{value:a.value,"onUpdate:value":c[0]||(c[0]=d=>a.value=d),placeholder:f(S)("page.retryTask.form.sceneName"),options:f(_)(o.value),clearable:n.clearable},null,8,["value","placeholder","options","clearable"])}}});export{w as _,B as a,L as b,b as c,k as d,q as e,N as f,$ as g};
